"""
Snakefile for running GA Experiment

slim -m -t -d "snake_mu_rate = ${1}" -d "newt_mu_rate = ${2}" -d "snake_mu_effect_sd = ${3}" -d "newt_mu_effect_sd = ${4}" -d "msprime_file = '${5}'" -d "treename = '${6}'" -d "outpath = '${7}'" -d "myFN = '${9}'" -d "NUMGENS = ${10}" '/home/vcaudill/kernlab/coevo/SLiM_script/cost_1on1.slim';

"""

import sys, os, subprocess, glob, pathlib
import numpy as np
configfile: "sim_params.yaml"
rng = np.random.default_rng(12345) ## this will help to se the seeds for the msprime and slim sims

# ###############################################################################
# GENERAL RULES & GLOBALS
# ###############################################################################

# Where you would like all output files from analysis to live

cwd = os.getcwd()
input_dir = "/home/vcaudill/kernlab/coevo/"
prefix = "snakefolder"
out_csv = input_dir  + prefix + "/csv/"
out_msprime = input_dir + prefix + "/msprime/"
out_slim = input_dir + prefix + "/slim/"
tag="snakemake_test"
grid_val=10

#s_param = ["0.1","0.2","0.3","0.4","0.5"] #sigma
#m_param = ["0.1","0.2","0.3","0.4","0.5"] #mutation
#g_param = ["5000","50000","100000"] #ending generation

## These are the output files that I expect
out = expand(f"{out_slim}slim_trees_snake_mu_rate_{{s_murs}}_newt_mu_rate_{{n_murs}}_snake_mu_effect_sd_{{s_es}}_newt_mu_effect_sd_{{n_es}}_sigma_{{sigma}}_rep_{{rep}}_late_{{gen_end}}", rep=range(2), s_murs=config["s_mus"], n_murs=config["n_mus"], s_es=config["s_es"], n_es=config["n_es"], sigma=config["sigma"], gen_end=config["gen_end"])
seeds = rng.integers(0,2**32, len(out))
out = [out[i]+f"_ID_{seeds[i]}.trees" for i in range(len(out))]

# --dry--run
# Run full pipeline!
rule all: 
   input: out

rule msprime:
    #input: dont need infile
    output: f"{out_msprime}trees_su_{{s_murs}}_nu_{{n_murs}}_sue_{{s_es}}_nue_{{n_es}}_rep_{{rep}}_SLIMseed_{{seeds}}.init.trees"
    #threads:20
    shell: 
        ("python /home/vcaudill/kernlab/coevo/MSprime_script/snake_newt_gv_sm.py {wildcards.s_murs} {wildcards.n_murs} " +
        "{wildcards.s_es} {wildcards.n_es} {out_msprime} {tag} {wildcards.rep} {wildcards.seeds}")


rule slim:
    input: msp_ts=f"{out_msprime}trees_su_{{s_murs}}_nu_{{n_murs}}_sue_{{s_es}}_nue_{{n_es}}_rep_{{rep}}_SLIMseed_{{seeds}}.init.trees"
    output: f"{out_slim}slim_trees_snake_mu_rate_{{s_murs}}_newt_mu_rate_{{n_murs}}_snake_mu_effect_sd_{{s_es}}_newt_mu_effect_sd_{{n_es}}_sigma_{{sigma}}_rep_{{rep}}_late_{{gen_end}}_ID_{{seeds}}.trees"
    #threads:20
    shell:
        ("slim -m -t -d snake_mu_rate={wildcards.s_murs} -d newt_mu_rate={wildcards.n_murs} " +
        "-d snake_mu_effect_sd={wildcards.s_es} -d newt_mu_effect_sd={wildcards.n_es} " +
        "-d msprime_file={input} -d treename={out_slim} -d outpath={out_csv} " +
        " -d rep={wildcards.rep} -d NUMGENS={wildcards.gen_end} -d seed={wildcards.seeds} -d grid_val={grid_val} /home/vcaudill/kernlab/coevo/SLiM_script/cost_1on1_sm.slim")
 

 